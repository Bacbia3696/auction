// Code generated by sqlc. DO NOT EDIT.
// source: role.sql

package db

import (
	"context"
)

const listRole = `-- name: ListRole :many


SELECT id, name FROM role
ORDER BY Id
`

// query.sql
func (q *Queries) ListRole(ctx context.Context) ([]Role, error) {
	rows, err := q.db.QueryContext(ctx, listRole)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Role{}
	for rows.Next() {
		var i Role
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
